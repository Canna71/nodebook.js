name: Semantic Release

on:
  workflow_dispatch: # Allow manual triggering only

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install semantic-release
        run: pnpm add -D semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github conventional-changelog-conventionalcommits

      - name: Create semantic-release config
        run: |
          cat > .releaserc.json << 'EOF'
          {
            "branches": ["main"],
            "plugins": [
              [
                "@semantic-release/commit-analyzer",
                {
                  "preset": "conventionalcommits",
                  "releaseRules": [
                    {"type": "feat", "release": "minor"},
                    {"type": "fix", "release": "patch"},
                    {"type": "perf", "release": "patch"},
                    {"type": "revert", "release": "patch"},
                    {"type": "docs", "release": false},
                    {"type": "style", "release": false},
                    {"type": "chore", "release": false},
                    {"type": "refactor", "release": "patch"},
                    {"type": "test", "release": false},
                    {"type": "build", "release": false},
                    {"type": "ci", "release": false},
                    {"breaking": true, "release": "major"}
                  ]
                }
              ],
              "@semantic-release/release-notes-generator",
              [
                "@semantic-release/changelog",
                {
                  "changelogFile": "CHANGELOG.md"
                }
              ],
              "@semantic-release/npm",
              [
                "@semantic-release/git",
                {
                  "assets": ["package.json", "CHANGELOG.md"],
                  "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
                }
              ],
              "@semantic-release/github"
            ]
          }
          EOF

      - name: Run semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm semantic-release

      - name: Get release info
        id: release_info
        run: |
          if [ -f package.json ]; then
            NEW_VERSION=$(node -p "require('./package.json').version")
            echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
            echo "Released version: $NEW_VERSION"
          else
            echo "No release created"
            echo "version=" >> $GITHUB_OUTPUT
          fi

    outputs:
      version: ${{ steps.release_info.outputs.version }}

  trigger-build:
    needs: release
    if: needs.release.outputs.version != ''
    runs-on: ubuntu-latest
    steps:
      - name: Notify build trigger
        run: |
          echo "Semantic release created version ${{ needs.release.outputs.version }}"
          echo "Build workflow will be triggered automatically by the tag push."

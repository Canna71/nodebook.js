{
  "cells": [
    {
      "id": "md_01",
      "type": "markdown",
      "content": "# Reactive Propagation Test\n\nThis notebook tests both PropertyGrid display updates AND reactive propagation to other cells."
    },
    {
      "id": "code_01",
      "type": "code",
      "code": "// Create a simple reactive object\nexports.config = {\n  name: \"Test App\",\n  version: 1.0,\n  enabled: true\n};\n\noutput(exports.config);"
    },
    {
      "id": "md_02",
      "type": "markdown",
      "content": "## Instructions\n\n1. Edit values in the PropertyGrid above (change name, version, or enabled)\n2. Notice the PropertyGrid updates immediately\n3. Run the cell below to check if changes propagated to other cells"
    },
    {
      "id": "code_02",
      "type": "code",
      "code": "// This cell should show the updated values\nconsole.log('Current config values:');\nconsole.log('Name:', config.name);\nconsole.log('Version:', config.version);\nconsole.log('Enabled:', config.enabled);\n\n// Display in PropertyGrid too\noutput({\n  'Config Name': config.name,\n  'Config Version': config.version,\n  'Config Enabled': config.enabled,\n  'Timestamp': new Date().toISOString()\n});"
    },
    {
      "id": "md_03",
      "type": "markdown",
      "content": "## Expected Behavior\n\n✅ **PropertyGrid updates**: When you edit a value in the first PropertyGrid, it should update immediately  \n✅ **Reactive propagation**: When you run the second cell, it should show the new values  \n✅ **Both work together**: The PropertyGrid display AND reactive propagation should both work"
    }
  ]
}

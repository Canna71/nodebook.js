{
  "cells": [
    {
      "type": "markdown",
      "id": "md_mbthsdfa_hv9vy",
      "content": "# Mathjs Example\n\n\nThis Notebook shows how to do math with **Notebook.js**\n\n"
    },
    {
      "type": "code",
      "id": "code_mbthu70i_bxyvx",
      "code": "// importing mathjs\nconst mathjs = require('mathjs')\nexports.mathjs = mathjs;\n"
    },
    {
      "type": "markdown",
      "id": "md_mbthwqrn_1f5hf",
      "content": "## Simplify"
    },
    {
      "type": "code",
      "id": "code_mbthwfdu_el2vx",
      "code": "const simplify = mathjs.simplify;\noutput(simplify('3 + 2 / 4').toString());\noutput(simplify('2x + 3x').toString());\noutput(simplify('2 * 3 * x', { x: 4 }).toString());\noutput(simplify('x^2 + x + 3 + x^2').toString());\noutput(simplify('x * y * -x / (x ^ 2)').toString());"
    },
    {
      "type": "markdown",
      "id": "md_mbti1j6a_3d4u0",
      "content": "## work with an expression tree\n\n```c#\ninternal class() {\n\n}\n```"
    },
    {
      "type": "code",
      "id": "code_mbti1x72_wlawe",
      "code": "const f = mathjs.parse('2x + x')\nconst simplified = mathjs.simplify(f);\noutput(simplified.toString());\noutput(simplified.evaluate({ x: 4 }));"
    },
    {
      "type": "markdown",
      "id": "md_mbti4dn4_jcwbn",
      "content": "## calculate a derivative"
    },
    {
      "type": "code",
      "id": "code_mbti4nn0_53ohw",
      "code": "\noutput(mathjs.derivative('2x^2 + 3x + 4', 'x').toString()) // '4 * x + 3'\noutput(mathjs.derivative('sin(2x)', 'x').toString()) // '2 * cos(2 * x)'"
    },
    {
      "type": "markdown",
      "id": "md_mbtik8lm_f6fwo",
      "content": "## Latex output\n\nIf you need to display latex as output from a code cell: return\na string comprised between '$$'"
    },
    {
      "type": "code",
      "id": "code_mbtikuc4_1sv43",
      "code": "const expr = 'sqrt(75 / 3) + det([[-1, 2], [3, 1]]) - sin(pi / 4)^2';\nconst node = mathjs.parse(expr);\noutput(\"$$\"+node.toTex()+\"$$\");\n\n\n"
    },
    {
      "type": "markdown",
      "id": "md_01",
      "content": "# Latex inside Markdown\n\n## Inline\nSurround your LaTeX with a single `$` on each side for inline rendering.\n\n```\n$\\sqrt{3x-1}+(1+x)^2$\n```\n\n$\\sqrt{3x-1}+(1+x)^2$\n\n## Block\nUse two (`$$`) for block rendering. This mode uses bigger symbols and centers the result.\n\n```\n$$\\begin{array}{c}\n\n\\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} &\n= \\frac{4\\pi}{c}\\vec{\\mathbf{j}}    \\nabla \\cdot \\vec{\\mathbf{E}} & = 4 \\pi \\rho \\\\\n\n\\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} & = \\vec{\\mathbf{0}} \\\\\n\n\\nabla \\cdot \\vec{\\mathbf{B}} & = 0\n\n\\end{array}$$\n\n```\n\n$$\\begin{array}{c}\n\n\\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} &\n= \\frac{4\\pi}{c}\\vec{\\mathbf{j}}    \\nabla \\cdot \\vec{\\mathbf{E}} & = 4 \\pi \\rho \\\\\n\n\\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} & = \\vec{\\mathbf{0}} \\\\\n\n\\nabla \\cdot \\vec{\\mathbf{B}} & = 0\n\n\\end{array}$$\n"
    }
  ]
}
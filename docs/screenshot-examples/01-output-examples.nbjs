{
  "cells": [
    {
      "type": "markdown",
      "id": "header",
      "content": "# Output Examples Showcase\n\nThis notebook demonstrates the different types of outputs available in Nodebook.js code cells."
    },
    {
      "type": "code",
      "id": "text-output",
      "content": "// Text Output Example\noutput(\"Hello, World! This is simple text output.\");\noutput(\"You can output multiple lines and they will be displayed clearly.\");"
    },
    {
      "type": "code",
      "id": "object-output",
      "content": "// Object Property Grid Example\nconst userData = {\n  name: \"Alice Johnson\",\n  age: 30,\n  email: \"alice@example.com\",\n  preferences: {\n    theme: \"dark\",\n    language: \"en\",\n    notifications: true\n  },\n  hobbies: [\"reading\", \"cycling\", \"photography\"]\n};\n\n// Export as reactive value to make it editable in property grid\nexports.userData = userData;\n\n// Display with interactive property grid\noutput(userData);"
    },
    {
      "type": "code",
      "id": "table-output",
      "content": "// Data Table Example\nconst salesData = [\n  { product: \"Widget A\", sales: 1000, revenue: 50000, region: \"North\" },\n  { product: \"Widget B\", sales: 750, revenue: 37500, region: \"South\" },\n  { product: \"Widget C\", sales: 1200, revenue: 60000, region: \"East\" },\n  { product: \"Widget D\", sales: 900, revenue: 45000, region: \"West\" }\n];\n\n// Display as interactive table\noutput.table(salesData);"
    },
    {
      "type": "code",
      "id": "dataframe-output",
      "content": "// DataFrame Example (using danfojs)\nconst df = new dfd.DataFrame({\n  Name: [\"John\", \"Jane\", \"Bob\", \"Alice\"],\n  Age: [25, 30, 35, 28],\n  City: [\"New York\", \"London\", \"Tokyo\", \"Paris\"],\n  Salary: [50000, 65000, 70000, 55000]\n});\n\n// Display DataFrame with rich table view\noutput(df);"
    },
    {
      "type": "code",
      "id": "visualization-output",
      "content": "// Simple Plotly Visualization\nconst trace = {\n  x: ['Product A', 'Product B', 'Product C', 'Product D'],\n  y: [1000, 750, 1200, 900],\n  type: 'bar',\n  marker: {\n    color: ['#3b82f6', '#10b981', '#f59e0b', '#ef4444']\n  }\n};\n\nconst layout = {\n  title: 'Sales by Product',\n  xaxis: { title: 'Product' },\n  yaxis: { title: 'Sales' },\n  height: 400\n};\n\nconst plotDiv = createDiv({ style: 'height: 400px; width: 100%;' });\noutput(plotDiv);\nPlotly.newPlot(plotDiv, [trace], layout);"
    }
  ]
}

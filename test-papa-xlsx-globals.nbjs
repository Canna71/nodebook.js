{
  "cells": [
    {
      "id": "test-papa-global",
      "type": "code",
      "code": "// Test that PapaParse is available as Papa globally\nconst csvData = `name,age,department\nAlice,25,Engineering\nBob,30,Sales\nCharlie,35,Engineering`;\n\n// Test Papa functions as global Papa\nexports.parsedWithHeaders = Papa.parse(csvData, { header: true });\nexports.parsedAsArray = Papa.parse(csvData);\nexports.csvStringified = Papa.unparse([\n  { name: 'Diana', age: 28, department: 'Marketing' },\n  { name: 'Eve', age: 32, department: 'HR' }\n]);\n\nconsole.log('Papa is available as global:', typeof Papa !== 'undefined');\nconsole.log('Parsed CSV with headers:', exports.parsedWithHeaders.data.length, 'rows');\nconsole.log('CSV round-trip test:', exports.csvStringified);"
    },
    {
      "id": "test-xlsx-global",
      "type": "code",
      "code": "// Test that XLSX is available as XLSX globally\nconst worksheetData = [\n  { Name: 'Alice', Age: 25, Department: 'Engineering' },\n  { Name: 'Bob', Age: 30, Department: 'Sales' },\n  { Name: 'Charlie', Age: 35, Department: 'Engineering' }\n];\n\n// Test XLSX functions as global XLSX\nconst workbook = XLSX.utils.book_new();\nconst worksheet = XLSX.utils.json_to_sheet(worksheetData);\nXLSX.utils.book_append_sheet(workbook, worksheet, 'Employees');\n\nexports.workbook = workbook;\nexports.worksheetData = XLSX.utils.sheet_to_json(worksheet);\nexports.csvFromSheet = XLSX.utils.sheet_to_csv(worksheet);\n\nconsole.log('XLSX is available as global:', typeof XLSX !== 'undefined');\nconsole.log('Workbook created with sheets:', workbook.SheetNames);\nconsole.log('CSV from worksheet:', exports.csvFromSheet);"
    },
    {
      "id": "test-all-globals-compatibility",
      "type": "code",
      "code": "// Test that all new globals work and are compatible with require()\nconst papaparse = require('papaparse');\nconst xlsx = require('xlsx');\n\n// Verify both are the same instance\nexports.papaSameInstance = (Papa === papaparse);\nexports.xlsxSameInstance = (XLSX === xlsx);\n\n// Test versions if available\nexports.papaVersion = Papa.version || papaparse.version || 'unknown';\nexports.xlsxVersion = XLSX.version || xlsx.version || 'unknown';\n\nconsole.log('Global Papa and require(\"papaparse\") are the same:', exports.papaSameInstance);\nconsole.log('Global XLSX and require(\"xlsx\") are the same:', exports.xlsxSameInstance);\nconsole.log('Papa version:', exports.papaVersion);\nconsole.log('XLSX version:', exports.xlsxVersion);"
    }
  ],
  "metadata": {
    "title": "Test Papa and XLSX Global Availability",
    "description": "Test that papaparse and xlsx are available as Papa and XLSX globals"
  }
}
